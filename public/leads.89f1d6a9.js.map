{"version":3,"file":"leads.89f1d6a9.js","mappings":"yBACA,IAAIA,EAAsB,CCD1BA,EAAwB,6B,QCCxB,MAAMC,EAA8BC,GACzBA,EAAIC,iBAAiB,qBAG1BC,EAAwBC,IAC1BA,EAASC,SAAQ,SAASC,EAAIC,GAC1B,MAAMC,EAAqBD,EAAQ,EAEnCD,EAAGG,IAAI,OAAQ,sBACXD,EADW,4BAIXE,EAA0BF,GAC1B,SACR,GAAE,EAGAE,EAA6BC,IAC/B,MAAMC,EAAQC,SAASF,EAAI,GAAI,IACzBG,EAAYH,EAAa,GAARC,EACvB,IAAIG,EAAS,GAUb,OARIH,EAAQ,IACRG,EAASC,OAAOC,aAAaL,EAAQ,KAGrCE,EAAY,IACZC,GAAUC,OAAOC,aAAaH,EAAY,KAGvCC,CAAM,ECzBjBG,SAASC,iBAAiB,oBAAoB,MD4B/B,WACX,MAAMC,EAAOF,SAAShB,iBAAiB,2BAGjCmB,EAAoB,WACtB,MAAMC,EAAW,CAAC,SAAU,MAAO,IAAK,KAAM,IAC9C,IAAI,IAAIX,EAAE,EAAGA,EAAIW,EAASC,OAAQZ,IAC9B,GAAGW,EAASX,GAAK,qBAAsBa,OACnC,OAAOA,OAAOF,EAASX,GAAK,oBAGpC,OAAO,CACX,CAR0B,GAU1BS,EAAKf,SAASJ,IACV,IAAIG,EAAWJ,EAA2BC,GAE1C,GAAIoB,EAAkB,CAClBlB,EAAqBC,GAGrB,MAAMqB,EAAiB,CAACC,WAAW,EAAMC,SAAS,GAC5CC,EAAW,IAAIP,GAAkBQ,IACnCA,EAAUxB,SAASyB,KAEXA,EAASC,WAAWR,OAAS,GAAKO,EAASE,aAAaT,OAAS,KACjEK,EAASK,aAET7B,EAAWJ,EAA2BC,GACtCE,EAAqBC,GAErBwB,EAASM,QAAQjC,EAAKwB,GAC1B,GACF,IAGNG,EAASM,QAAQjC,EAAKwB,EAE1B,MACIrB,EAASC,SAAQ,SAASC,GACtBA,EAAGG,IAAI,OAAQ,GACnB,GACJ,GAER,CCvEI0B,EAAqB,G","sources":["webpack://@terminal42/contao-leads/webpack/bootstrap","webpack://@terminal42/contao-leads/webpack/runtime/publicPath","webpack://@terminal42/contao-leads/./assets/scripts/column-display-helper.js","webpack://@terminal42/contao-leads/./assets/leads.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.p = \"/bundles/terminal42leads/\";","\nconst fetchColumnDisplayElements = (mcw) => {\n    return mcw.querySelectorAll('td.column_display');\n};\n\nconst updateColumnDisplays = (elements) => {\n    elements.forEach(function(el, index) {\n        const humanReadableIndex = index + 1;\n\n        el.set('html', '<div class=\"index\">' +\n            humanReadableIndex +\n            '</div>' +\n            '<div class=\"excel\">' +\n            convertIndexToExcelColumn(humanReadableIndex) +\n            '</div>');\n    });\n};\n\nconst convertIndexToExcelColumn = (i) => {\n    const alpha = parseInt(i / 27, 10);\n    const remainder = i - (alpha * 26);\n    let column = '';\n\n    if (alpha > 0) {\n        column = String.fromCharCode(alpha + 64);\n    }\n\n    if (remainder > 0) {\n        column += String.fromCharCode(remainder + 64);\n    }\n\n    return column;\n};\n\nexport default function () {\n    const mcws = document.querySelectorAll('table.multicolumnwizard');\n\n    // Cannot use regular click events because of MCW\n    const MutationObserver = (function () {\n        const prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n        for(let i=0; i < prefixes.length; i++) {\n            if(prefixes[i] + 'MutationObserver' in window) {\n                return window[prefixes[i] + 'MutationObserver'];\n            }\n        }\n        return false;\n    }());\n\n    mcws.forEach((mcw) => {\n        let elements = fetchColumnDisplayElements(mcw);\n\n        if (MutationObserver) {\n            updateColumnDisplays(elements);\n\n            // Register observer\n            const observerConfig = {childList: true, subtree: true};\n            const observer = new MutationObserver((mutations) => {\n                mutations.forEach((mutation) => {\n\n                    if (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0) {\n                        observer.disconnect();\n\n                        elements = fetchColumnDisplayElements(mcw);\n                        updateColumnDisplays(elements);\n\n                        observer.observe(mcw, observerConfig);\n                    }\n                });\n            });\n\n            observer.observe(mcw, observerConfig);\n\n        } else {\n            elements.forEach(function(el) {\n                el.set('html', '');\n            });\n        }\n    });\n};\n","import './styles/leads.scss'\nimport './images/field.png';\nimport './images/export.png';\n\nimport ColumnDisplayHelper from './scripts/column-display-helper';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    ColumnDisplayHelper();\n});\n"],"names":["__webpack_require__","fetchColumnDisplayElements","mcw","querySelectorAll","updateColumnDisplays","elements","forEach","el","index","humanReadableIndex","set","convertIndexToExcelColumn","i","alpha","parseInt","remainder","column","String","fromCharCode","document","addEventListener","mcws","MutationObserver","prefixes","length","window","observerConfig","childList","subtree","observer","mutations","mutation","addedNodes","removedNodes","disconnect","observe","ColumnDisplayHelper"],"sourceRoot":""}